const{addHours,addMilliseconds,differenceInDays,differenceInHours,endOfDay,format,formatDistanceToNow,lastDayOfMonth,subMinutes,subSeconds}=require("date-fns");const{decrypt}=require("./encryption");const{getDateLocale}=require("./date");const{ohash}=require("./helpers");const axios=require("axios");const fs=require("fs");const https=require("https");const ical=require("node-ical");const rfdc=require("rfdc/default");module.exports={getCalendar({cb:a},r,s,n={}){n.language=n.language||"en-US";n.refresh=n.refresh||5;n.locale=getDateLocale(n.language);if(s.url&&(s.url.indexOf("http")>-1||s.url.indexOf("www.")>-1)){this.adapter.log.debug('Get Calendar "'+s.name+'" ('+r+") from URL "+s.url+"...");let e={};if(s.user&&s.pass){const{decrypted:i}=decrypt(s.pass,this.options.encryptionKey);e={username:s.user,password:i}}let t={url:s.url,auth:e};if(s.url.indexOf("https")>-1){t={...t,httpsAgent:new https.Agent({rejectUnauthorized:s.sslignore!==undefined?s.sslignore===false:true})}}return axios(t).then(e=>{this.adapter.log.debug('Get Calendar events for calendar "'+s.name+'" ('+r+")...");return this.getCalendarEvents({cb:a},s,r,e.data,n)}).catch(e=>{this.adapter.log.warn('Failed getting Calendar "'+s.name+'" ('+r+") from URL "+s.url+" ("+e.message+")!");return a({err:e})})}else if(s.url&&s.url.indexOf("http")===-1){this.adapter.log.debug('Get Calendar "'+s.name+'" ('+r+") from file...");return fs.readFile(s.url,"utf-8",(e,t)=>{if(e){this.adapter.log.warn('Failed getting Calendar "'+s.name+'" ('+r+") from file "+s.url+" ("+e.message+")!");return a({err:e})}this.adapter.log.debug('Get Calendar events for calendar "'+s.name+'" ('+r+")...");this.getCalendarEvents({cb:a},s,r,t,n)})}},getCalendarEvents({cb:s},n,i,e,t){const[a,r]=i.substr(i.indexOf(":")+1).split("-");const{locale:l}=t;const d=(new Date).getTimezoneOffset();const o=new Date(Date.UTC(a,r-1,1));const u=subMinutes(endOfDay(lastDayOfMonth(o)),d);return ical.async.parseICS(e).then(e=>{let t=[];for(const a in e){const r=e[a];if(r&&r.summary&&r.type==="VEVENT"&&r.start&&r.start instanceof Date){try{r.end=r.end&&r.end instanceof Date?r.end:null;r.hours=differenceInHours(r.end,r.start);r.isAllDay=!r.end?r.start.toString().indexOf("00:00:00")!==-1||r.start.toUTCString().indexOf("00:00:00")!==-1:format(r.start,"HH:mm:ss")===format(r.end,"HH:mm:ss")||r.hours===23&&(r.start.toString().indexOf("00:00:00")!==-1||r.start.toString().indexOf("01:00:00")!==-1);r.end=r.isAllDay&&r.end?subSeconds(r.end,1):r.end;r.time=r.isAllDay?"all day":r.multiDay?"several days":format(r.start,"HH:mm",{locale:l})+""+(r.end?"-"+format(r.end,"HH:mm",{locale:l}):"");r.multiDay=r.end&&(r.start.getDate()!==r.end.getDate()||r.start.getMonth()!==r.end.getMonth());r.duration=r.end?differenceInDays(r.end,r.start):1;r.caption=r.multiDay?format(r.start,"EEE, dd.MM."+(r.isAllDay?"":", HH:mm"),{locale:l})+" - "+format(r.end,"EEE, dd.MM."+(r.isAllDay?"":", HH:mm"),{locale:l}):format(r.start,"EEE, dd.MM.",{locale:l})+", "+formatDistanceToNow(r.isAllDay?addHours(r.start,12):r.start,{locale:l,addSuffix:true})}catch(e){this.adapter.log.warn("Failed parsing an event of calendar "+n.name+": "+e.message);this.adapter.log.debug(JSON.stringify({locale:l,start:r.start,end:r.end,hours:r.hours,isAllDay:r.isAllDay,time:r.time,multiDay:r.multiDay,duration:r.duration}))}if(r.rrule){let e=r.rrule.between(o,u);try{if(r.exdate&&e){e=e.filter(e=>{if(!e){return false}e=e instanceof Date?e:new Date(e);const t=e&&format(e,"yyyy-MM-dd",{locale:l});return t&&r.exdate[t]===undefined})}}catch(e){this.adapter.log.warn("Failed parsing a recurring event of calendar "+n.name+": "+e.message);this.adapter.log.debug(JSON.stringify({locale:l,start:r.start,end:r.end,isAllDay:r.isAllDay,time:r.time,multiDay:r.multiDay,duration:r.duration,rrule:r.rrule,exdate:r.exdate}))}e=e.map(e=>{const t=rfdc(r);try{t.recurring=true;delete t.rrule;delete t.exdate;const a=r.end-r.start;t.start=e;t.end=addMilliseconds(e,a);t.caption=format(t.start,"EEE, dd.MM.",{locale:l})+", "+formatDistanceToNow(t.isAllDay?addHours(t.start,12):t.start,{locale:l,addSuffix:true})}catch(e){this.adapter.log.warn("Failed mapping a recurring event of calendar "+n.name+": "+e.message);this.adapter.log.debug(JSON.stringify({locale:l,start:r.start,end:r.end,isAllDay:r.isAllDay,time:r.time,multiDay:r.multiDay,duration:r.duration}));this.adapter.log.debug(JSON.stringify({start:r.start&&r.start.toString(),end:r.end&&r.end.toString(),isAllDay:r.isAllDay&&r.isAllDay.toString(),time:r.time&&r.time.toString(),multiDay:r.multiDay&&r.multiDay.toString(),duration:r.duration&&r.duration.toString()}))}return t});t=t.concat(e)}else{if(r.start>=o&&r.start<=u){t.push(r)}else if(r.start<o&&r.end>=o){t.push(r)}}}}t=t.sort((e,t)=>e.start===t.start?0:e.start>t.start?1:-1);this.subscribedCalendar[i].events=t;this.subscribedCalendar[i].hash=ohash(t);return s(this.subscribedCalendar[i])}).catch(e=>{this.adapter.log.warn("Failed parsing ical of calendar "+n.name+": "+e.message);s({err:e})})},subscribeCalendar({cb:e,clientId:t},a,r,s){if(!this.subscribedCalendar[a]||!this.subscribedCalendar[a].events){this.subscribedCalendar[a]={subscriptionKey:a,calendar:r,options:{...s},clients:[t]};return this.getCalendar({cb:e},a,r,{...s})}else if(!this.subscribedCalendar[a].clients.includes(t)){this.subscribedCalendar[a].clients.push(t)}e(this.subscribedCalendar[a])}};