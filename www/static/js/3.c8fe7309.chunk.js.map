{"version":3,"sources":["../node_modules/markdown-it/lib/common/utils.js","../node_modules/markdown-it/index.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/token.js","../node_modules/markdown-it/lib/common/entities.js","../node_modules/mdurl/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/markdown-it/lib/index.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/parse.js","../node_modules/uc.micro/index.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/markdown-it/lib/helpers/index.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../../../../AppData/Roaming/npm/node_modules/react-scripts/node_modules/node-libs-browser/node_modules/punycode/punycode.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/presets/commonmark.js"],"names":["_hasOwnProperty","Object","prototype","hasOwnProperty","has","object","key","call","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","require","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","exports","lib","mdurl","ucmicro","assign","obj","sources","Array","slice","arguments","forEach","TypeError","keys","isString","toString","_class","unescapeMd","str","indexOf","replace","unescapeAll","match","escaped","entity","name","code","charCodeAt","test","toLowerCase","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","concat","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","trim","toUpperCase","module","Ruler","this","__rules__","__cache__","__find__","i","length","__compile__","self","chains","rule","enabled","alt","altName","push","chain","fn","at","options","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","result","idx","enableOnly","disable","getRules","chainName","Token","type","tag","nesting","attrs","map","level","children","content","markup","info","meta","block","hidden","attrIndex","len","attrPush","attrData","attrSet","value","attrGet","attrJoin","encode","decode","format","parse","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","postProcess","state","delimiters","j","startDelim","endDelim","token","loneMarkers","max","marker","end","tokens","pop","tokenize","silent","scanned","start","scanDelims","jump","open","can_open","close","can_close","curr","tokens_meta","isStrong","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","normalizeLinkText","toUnicode","defaultChars","MarkdownIt","presetName","inline","core","renderer","linkify","configure","set","presets","components","rules","ruler","rules2","ruler2","missed","filter","use","plugin","args","apply","env","State","process","render","parseInline","inlineMode","renderInline","encodeCache","string","exclude","keepEscaped","l","nextCode","cache","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","slashes","auth","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","split","simplePath","exec","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","k","validParts","notHost","bit","unshift","join","qm","u","Any","Cc","Cf","P","Z","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","found","prevPos","labelEnd","posMax","oldPos","md","skipToken","ok","lines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","langName","langAttrs","highlight","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","tok","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","pretest","schema","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","StateCore","startLine","endLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","getLine","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","shift","parentType","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","block_names","HTML_SEQUENCES","html","tmp","skipSpacesBack","skipCharsBack","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","_rules2","pending","pushPending","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","lc","isLetter","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","re","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","alias","slist","schema_test","src_ZPCc","schema_search","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","schemas","reduce","acc","add","definition","m","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","root","nodeType","freeGlobal","global","window","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","out","basic","oldi","w","baseMinusT","codePoint","inputLength","n","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","define"],"mappings":"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","file":"static/js/3.c8fe7309.chunk.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i / 2, // for `~~` 1 marker = 2 characters\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    // avoid crash if `closer.jump` is pointing outside of the array, see #742\n    if (openerIdx < -1) openerIdx = -1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n"],"sourceRoot":""}