{"version":3,"sources":["pages/ConfigurationPage/DevicesPage/StateExplorer.js"],"names":["useStyles","makeStyles","theme","divider","flexGrow","TreeView","padding","spacing","backgroundColor","TreeItem","color","palette","text","secondary","action","hover","TreeItemContent","paddingRight","TreeItemError","error","light","textDecoration","cursor","fontWeight","TreeItemExpanded","TreeItemSelected","TreeItemGroup","paddingLeft","TreeItemLabel","Entry","display","alignItems","Group","EntryIcon","marginRight","EntryText","indexObjects","list","index","objectsTree","root","objectId","substr","lastIndexOf","namespace","indexOf","id","undefined","push","StateExplorer","React","memo","props","val","_onChange","classes","useState","Cache","get","objectList","setObjectList","selectedItem","useRef","searchTimeout","useEffect","Connection","connection","getObjects","then","res","forEach","promise","i","status","value","Array","isArray","rows","obj","sort","tree","_objectList","Date","now","set","catch","Log","_","message","stack","renderTree","key","states","children","Object","keys","channelKey","type","length","concat","map","stateKey","Item","nodeId","label","channel","details","group","Fieldset","Text","onChange","clearTimeout","current","setTimeout","data","filter","toLowerCase","prevObjectList","className","style","margin","i18n","t","timeConverter","parseDate","updated","Button","startIcon","onClick","defaultCollapseIcon","defaultExpandIcon","onNodeSelect","e","otherProps","clsx","content","expanded","selected","common","name","GroupIcon","StateIcon","width","caption","title","arrow","role","variant","getLanguage","StateExplorerPopup","open","_onClose","state","header","actions","dense","maxWidth","fullWidth","onClose","s"],"mappings":"sbA+BMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCC,QAAS,CACRC,SAAU,GAEXC,SAAU,CACTC,QAASJ,EAAMK,QAAQ,GACvB,6IAA8I,CAC7IC,gBAAiB,gBAGnBC,SAAU,CACTC,MAAOR,EAAMS,QAAQC,KAAKC,UAC1B,6BAA8B,CAC7BL,gBAAiBN,EAAMS,QAAQG,OAAOC,QAGxCC,gBAAiB,CAChBN,MAAOR,EAAMS,QAAQC,KAAKC,UAC1BI,aAAcf,EAAMK,QAAQ,GAE5B,wBAAyB,IAI1BW,cAAe,CACdV,gBAAiBN,EAAMS,QAAQQ,MAAMC,MACrCC,eAAgB,eAChBC,OAAQ,yBACRC,WAAY,UAEbC,iBAAkB,GAElBC,iBAAkB,CACjBF,WAAY,mBAEbG,cAAe,CACdH,WAAY,UACZ,qBAAsB,CACrBI,YAAazB,EAAMK,QAAQ,KAG7BqB,cAAe,CACdL,WAAY,UACZb,MAAO,WAERmB,MAAO,CACNC,QAAS,OACTC,WAAY,SACZzB,QAASJ,EAAMK,QAAQ,GAAK,IAE7ByB,MAAO,GAGPC,UAAW,CACVC,YAAahC,EAAMK,QAAQ,IAE5B4B,UAAW,CACVZ,WAAY,UACZnB,SAAU,OAQNgC,EAAe,SAACC,EAAMC,GAC3B,IADqC,EACjCC,EAAc,GACdC,EAAO,GAF0B,cAIhBH,GAJgB,IAIrC,2BAA2B,CAAC,IAAnBI,EAAkB,QAG1BF,EAAYE,EAASC,OAAO,EAAGD,EAASE,YAAY,OAASJ,EAAYE,EAASC,OAAO,EAAGD,EAASE,YAAY,QAAU,GAC3HJ,EAAYE,EAASC,OAAO,EAAGD,EAASE,YAAY,OAAOF,GAAYH,EAAMG,GAI7E,IADA,IAAIG,EAAYH,EACTG,EAAUC,QAAQ,MAAQ,GAAG,CACnC,IAAMC,EAAKF,OAGoBG,IAA3BR,EAFJK,EAAYA,EAAUF,OAAO,EAAGE,EAAUD,YAAY,aAEqBI,IAA/BR,EAAYK,GAAWE,KAClEP,EAAYK,GAAaL,EAAYK,IAAc,GACnDL,EAAYK,GAAWE,GAAM,IAG1BF,IAAyC,IAA5BA,EAAUC,QAAQ,OAA4C,IAA7BL,EAAKK,QAAQD,IAC9DJ,EAAKQ,KAAKJ,KAtBwB,8BA2BrC,MAAO,CAAEJ,EAAMD,IAMVU,EAAgBC,IAAMC,MAAK,SAAAC,GAAU,IAClCC,EAAmBD,EAAnBC,IAAKC,EAAcF,EAAdE,UACPC,EAAUvD,IAFyB,EAKNwD,mBAASC,UAAMC,IAAI,eAAiB,MAL9B,mBAKlCC,EALkC,KAKvBC,EALuB,KAMnCC,EAAeC,iBAAOT,GACtBU,EAAgBD,mBAEtBE,qBAAU,WAEU,OAAfL,GAAwBA,EAAWnB,MACvByB,UAAWC,WACnBC,aACLC,MAAK,SAAAC,GACL,IAAIhC,EAAO,GACPC,EAAQ,GAEZ+B,EAAIC,SAAQ,SAACC,EAASC,GAErB,GAAuB,cAAnBD,EAAQE,QAA0BF,EAAQG,OAASC,MAAMC,QAAQL,EAAQG,MAAMG,MAAO,qBAGzEN,EAAQG,MAAMG,MAH2D,IAGzF,2BAAoC,CAAC,IAA5BC,EAA2B,QAGR,WAAvBA,EAAIhC,GAAGJ,OAAO,EAAE,KAKpBJ,EAAMwC,EAAIhC,IAAMgC,EAAIJ,MACpBrC,EAAKW,KAAK8B,EAAIhC,MAZ0E,mCAkB3FT,EAAK0C,OAxBO,MAyBW3C,EAAaC,EAAMC,GAzB9B,mBAyBJE,EAzBI,KAyBEwC,EAzBF,KA2BNC,EAAc,CACnB,QAAWC,KAAKC,MAChB,KAAQ3C,EAAKuC,OACb,KAAQ1C,EACR,KAAQ2C,GAGTvB,UAAM2B,IAAI,aAAcH,GACxBrB,EAAcqB,MAEdI,OAAM,SAAAlE,GACNmE,UAAIC,EAAE,gBAAiBpE,EAAMqE,QAAS,SAAS,EAAMrE,EAAMsE,YAI5D,CAAC9B,IAGJ,IA2BM+B,EAAa,SAAbA,EAAaC,GAClB,IAAIC,EAAS,GACTC,EAAW,GAGXlC,EAAWqB,KAAKW,IACnBG,OAAOC,KAAKpC,EAAWqB,KAAKW,IAAMrB,SAAQ,SAAA0B,GAGtB,UAFLrC,EAAWqB,KAAKW,GAAKK,GAEzBC,KACTL,EAAO5C,KAAKgD,GAGZH,EAAS7C,KAAK0C,EAAWM,OAMxBJ,EAAOM,OAAS,IACnBL,EAAWA,EAASM,OACnBP,EAAOQ,KAAI,SAAAC,GAAQ,OAAI,kBAACC,EAAD,CAAMX,IAAKU,EAAUlF,MAAQkF,EAASxD,QAAQ,MAAQ,EAAI0D,OAAQF,EAAUG,MAAO,kBAAC3E,EAAD,eAAO8D,IAAKU,EAAUlF,MAAQkF,EAASxD,QAAQ,MAAQ,EAAIC,GAAIuD,EAAS3D,OAAO2D,EAAS1D,YAAY,KAAK,IAAQgB,EAAWqB,KAAKqB,EAAS3D,OAAO,EAAG2D,EAAS1D,YAAY,OAAO0D,YAI5R,IAAMI,EAAUd,EAAIjD,OAAOiD,EAAIhD,YAAY,KAAK,GAC1C+D,EAAUf,EAAI9C,QAAQ,MAAQ,EAAIc,EAAWqB,KAAKW,EAAIjD,OAAO,EAAGiD,EAAIhD,YAAY,OAAOgD,GAAO,GACpG,OACC,kBAACW,EAAD,CAAMX,IAAKA,EAAKY,OAAQZ,EAAKE,SAAUA,EAAUW,MAAO,kBAAC3E,EAAD,eAAO8D,IAAKA,EAAKgB,OAAK,EAAC7D,GAAI2D,GAAaC,OAIlG,OACC,kBAAC,IAAD,KACC,kBAAC,UAAOE,SAAR,KACC,kBAAC,UAAOC,KAAR,CACC/D,GAAG,SACH0D,MAAM,SACNM,SAjEW,SAAC1D,EAAOC,GACtB0D,aAAahD,EAAciD,SAC3BjD,EAAciD,QAAUC,YAAW,WAClC,IAAMC,EAAOzD,UAAMC,IAAI,cADiB,EAGjBtB,EAAa8E,EAAK7E,KAAK8E,QAAO,SAAArC,GAAG,OAAIA,EAAIsC,cAAcvE,QAAQQ,EAAI+D,gBAAkB,KAAIF,EAAKlC,MAH7E,mBAGhCxC,EAHgC,KAG1BwC,EAH0B,KAIxCpB,GAAc,SAAAyD,GAAc,kCACxBA,GADwB,IAE3B,KAAQ7E,EAAKuC,OACb,KAAQC,SAGP,QAwDD,yBAAKsC,UAAW/D,EAAQpD,UACxB,yBAAKoH,MAAO,CAAEC,OAAQ,WACL,OAAf7D,GAAuB,0BAAM4D,MAAO,CAAEC,OAAQ,WAAaC,UAAKC,EAAE,gBAAkB,KAAOC,UAAcC,UAAUjE,EAAWkE,QAAS,yBACxI,kBAAC,UAAOC,OAAR,CACCtB,MAAM,UACNuB,UAAW,kBAAC,IAAD,MACXC,QAAS,kBAAMpE,EAAc,WAIhC,kBAAC,IAAD,MAEiB,OAAfD,GAAwBA,EAAWnB,KAGrC,kBAAC,IAAD,CACC8E,UAAW/D,EAAQlD,SACnB4H,oBAAqB,kBAAC,IAAD,MACrBC,kBAAmB,kBAAC,IAAD,MACnBC,aAvEkB,SAACC,EAAG/E,GAGP,QAFAM,EAAWqB,KAAK3B,IAAQ,QAGxCA,GAA4B,IAAtBA,EAAIR,QAAQ,KAAcQ,EAAM,GACtCQ,EAAamD,QAAU3D,EACvBC,EAAUD,MAoERM,EAAWnB,KAAK4D,KAAI,SAAAT,GAAG,OAAID,EAAWC,OATxC,kBAAC,IAAD,UAkBGW,EAAO,SAAAlD,GAAU,IACdyC,EAAmCzC,EAAnCyC,SAAU1E,EAAyBiC,EAAzBjC,MAAUkH,EADP,YACsBjF,EADtB,sBAEfG,EAAUvD,IAEhB,OACC,kBAAC,IAAD,eACCuD,QAAS,CACRf,KAAM8F,YAAKnH,GAASoC,EAAQrC,cAAeqC,EAAQ9C,UACnD8H,QAAShF,EAAQvC,gBACjBwH,SAAUjF,EAAQ/B,iBAClBiH,SAAUlF,EAAQ9B,iBAClBkF,MAAOpD,EAAQ7B,cACf8E,MAAOjD,EAAQ3B,gBAGZyG,GAGHxC,GAAY,OAQVhE,EAAQ,SAAAuB,GAAU,IACfN,EAAmCM,EAAnCN,GAAI3B,EAA+BiC,EAA/BjC,MAAO8E,EAAwB7C,EAAxB6C,KAAMU,EAAkBvD,EAAlBuD,MAAO+B,EAAWtF,EAAXsF,OAC1BnF,EAAUvD,IAEV2I,EAAOD,GAAUA,EAAOC,KAAOD,EAAOC,KAAO,GAC7C1G,EAAY0E,EAAQiC,IAAYC,IACtC,OACC,yBAAKvB,UAAWgB,YAAKnH,GAASoC,EAAQrC,cAAeqC,EAAQ1B,MAAO8E,GAASpD,EAAQvB,QACpF,kBAACC,EAAD,CAAWvB,MAAM,UAAU4G,UAAW/D,EAAQtB,YAC9C,kBAACE,EAAD,CAAW2G,MAAM,MAAMC,SAAO,EAACvC,MAAO1D,IACrC6F,EAAKzC,OAAS,GACd,kBAAC,IAAD,CAAS8C,MAAOL,EAAMM,OAAK,GAC1B,yBAAK1B,MAAO,CAAEuB,MAAO,QACpB,kBAAC3G,EAAD,CAAWqE,MAAOmC,EAAKjG,OAAO,EAAG,IAAM,UAIzC,kBAACP,EAAD,CAAW2G,MAAM,MAAMtC,MAAOmC,IAE/B,kBAACxG,EAAD,CAAW2G,MAAM,MAAMtC,MAAOP,IAC9B,kBAAC9D,EAAD,CAAW2G,MAAM,MAAMtC,MAAOkC,GAAUA,EAAOQ,SAQ5C/G,EAAY,SAAAiB,GAAU,IACnBoD,EAA0BpD,EAA1BoD,MAAOsC,EAAmB1F,EAAnB0F,MAAOC,EAAY3F,EAAZ2F,QAChBxF,EAAUvD,IAEhB,OACC,yBAAKuH,MAAO,CAAEuB,MAAOA,GAAS,SAC7B,kBAAC,IAAD,CAAYK,QAASJ,EAAU,UAAY,QAASzB,UAAW/D,EAAQpB,WACpEqE,GAASA,EAAMiB,UAAK2B,gBAAmB5C,GAAS,MASzC6C,EAAqBnG,IAAMC,MAAK,SAAAC,GAAU,IAC9CkG,EAA8BlG,EAA9BkG,KAAMC,EAAwBnG,EAAxBmG,SAAUjG,EAAcF,EAAdE,UAElBkG,EAAQ1F,iBAAOV,EAAMC,KAC3B,OACC,kBAAC,UAAD,CACCoG,OAAQhC,UAAKC,EAAE,kBACfgC,QAAS,CACR,kBAAC,UAAO5B,OAAR,CAAenC,IAAI,gBAAgBwD,QAAQ,OAAOnB,QAASuB,EAAU7I,MAAM,YAAY8F,MAAM,WAC7F,kBAAC,UAAOsB,OAAR,CAAenC,IAAI,cAAcwD,QAAQ,OAAOnB,QAAS,kBAAM1E,EAAUkG,EAAMxC,UAAUtG,MAAM,UAAU8F,MAAM,WAGhHmD,OAAK,EACLC,SAAS,KACTC,WAAW,EAEXP,KAAMA,EACNQ,QAASP,GAGT,kBAACtG,EAAD,iBAAmBG,EAAnB,CAA0BE,UAAW,SAAAyG,GAAC,OAAIP,EAAMxC,QAAU+C,UAK9C9G","file":"static/js/42.17ba5c0c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport clsx from 'clsx'\r\n\r\nimport Cache from '../../../controller/Cache'\r\nimport Connection from '../../../controller/Connection'\r\nimport i18n from '../../../controller/i18n'\r\nimport Log from '../../../controller/Log'\r\nimport timeConverter from '../../../helpers/timeConverter'\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TreeItem from '@material-ui/lab/TreeItem'\r\nimport TreeView from '@material-ui/lab/TreeView'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport CollapseIcon from '@material-ui/icons/ArrowDropDown'\r\nimport ExpandIcon from '@material-ui/icons/ArrowRight'\r\nimport GroupIcon from '@material-ui/icons/Folder'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport StateIcon from '@material-ui/icons/BookmarkBorder'\r\n\r\nimport Dialog from '../../../components/Dialog'\r\nimport Inputs from '../../../components/Inputs'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tdivider: {\r\n\t\tflexGrow: 1\r\n\t},\r\n\tTreeView: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\t'&:focus > $TreeItemContent $TreeItemLabel, &:hover > $TreeItemContent $TreeItemLabel, &$TreeItemSelected > $TreeItemContent $TreeItemLabel': {\r\n\t\t\tbackgroundColor: 'transparent',\r\n\t\t},\r\n\t},\r\n\tTreeItem: {\r\n\t\tcolor: theme.palette.text.secondary,\r\n\t\t'&:hover > $TreeItemContent': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n\tTreeItemContent: {\r\n\t\tcolor: theme.palette.text.secondary,\r\n\t\tpaddingRight: theme.spacing(1),\r\n\t\t//fontWeight: theme.typography.fontWeightMedium,\r\n\t\t'$TreeItemExpanded > &': {\r\n\t\t\t//fontWeight: theme.typography.fontWeightRegular,\r\n\t\t},\r\n\t},\r\n\tTreeItemError: {\r\n\t\tbackgroundColor: theme.palette.error.light,\r\n\t\ttextDecoration: 'line-through',\r\n\t\tcursor: 'not-allowed !important',\r\n\t\tfontWeight: 'normal',\r\n\t},\r\n\tTreeItemExpanded: {\r\n\t},\r\n\tTreeItemSelected: {\r\n\t\tfontWeight: 'bold !important',\r\n\t},\r\n\tTreeItemGroup: {\r\n\t\tfontWeight: 'initial',\r\n\t\t'& $TreeItemContent': {\r\n\t\t\tpaddingLeft: theme.spacing(2),\r\n\t\t},\r\n\t},\r\n\tTreeItemLabel: {\r\n\t\tfontWeight: 'inherit',\r\n\t\tcolor: 'inherit',\r\n\t},\r\n\tEntry: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: theme.spacing(0.5, 0),\r\n\t},\r\n\tGroup: {\r\n\t\t//fontWeight: 'bold'\r\n\t},\r\n\tEntryIcon: {\r\n\t\tmarginRight: theme.spacing(1),\r\n\t},\r\n\tEntryText: {\r\n\t\tfontWeight: 'inherit',\r\n\t\tflexGrow: 1,\r\n\t}\r\n}));\r\n\r\n\r\n/*\r\n *\r\n */\r\nconst indexObjects = (list, index) => {\r\n\tlet objectsTree = {}\r\n\tlet root = [];\r\n\t\r\n\tfor (let objectId of list) {\r\n\t\t\r\n\t\t// index state\r\n\t\tobjectsTree[objectId.substr(0, objectId.lastIndexOf('.'))] = objectsTree[objectId.substr(0, objectId.lastIndexOf('.'))] || {}\r\n\t\tobjectsTree[objectId.substr(0, objectId.lastIndexOf('.'))][objectId] = index[objectId];\r\n\t\t\r\n\t\t// make sure state is added to all its parents\r\n\t\tlet namespace = objectId;\r\n\t\twhile (namespace.indexOf('.') > -1) {\r\n\t\t\tconst id = namespace;\r\n\t\t\tnamespace = namespace.substr(0, namespace.lastIndexOf('.'));\r\n\t\t\t\r\n\t\t\tif (objectsTree[namespace] === undefined || objectsTree[namespace][id] === undefined) {\r\n\t\t\t\tobjectsTree[namespace] = objectsTree[namespace] || {}\r\n\t\t\t\tobjectsTree[namespace][id] = {}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (namespace && namespace.indexOf('.') === -1 && root.indexOf(namespace) === -1) {\r\n\t\t\t\troot.push(namespace);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn [ root, objectsTree ];\r\n}\r\n\r\n/*\r\n *\r\n */\r\nconst StateExplorer = React.memo(props => {\r\n\tconst { val, _onChange } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\t\r\n\tconst [objectList,setObjectList] = useState(Cache.get('objectList') || null);\r\n\tconst selectedItem = useRef(val);\r\n\tconst searchTimeout = useRef();\r\n\t\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tif (objectList === null || !objectList.root) {\r\n\t\t\tconst socket = Connection.connection;\r\n\t\t\tsocket.getObjects()\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tlet list = [];\r\n\t\t\t\t\tlet index = {}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres.forEach((promise, i) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (promise.status === 'fulfilled' && promise.value && Array.isArray(promise.value.rows)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// read results and sort\r\n\t\t\t\t\t\t\tfor (let obj of promise.value.rows) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// skip system\r\n\t\t\t\t\t\t\t\tif (obj.id.substr(0,6) === 'system') {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// index result\r\n\t\t\t\t\t\t\t\tindex[obj.id] = obj.value;\r\n\t\t\t\t\t\t\t\tlist.push(obj.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t// index sorted results\r\n\t\t\t\t\tlist.sort();\r\n\t\t\t\t\tconst [ root, tree ] = indexObjects(list, index);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst _objectList = {\r\n\t\t\t\t\t\t'updated': Date.now(),\r\n\t\t\t\t\t\t'root': root.sort(),\r\n\t\t\t\t\t\t'list': list,\r\n\t\t\t\t\t\t'tree': tree\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tCache.set('objectList', _objectList);\r\n\t\t\t\t\tsetObjectList(_objectList);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tLog._('StateExplorer', error.message, 'error', true, error.stack);\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t}, [objectList]);\r\n\t\r\n\t//\r\n\tconst search = (props, val) => {\r\n\t\tclearTimeout(searchTimeout.current);\r\n\t\tsearchTimeout.current = setTimeout(() => {\r\n\t\t\tconst data = Cache.get('objectList');\r\n\t\t\t\r\n\t\t\tconst [ root, tree ] = indexObjects(data.list.filter(obj => obj.toLowerCase().indexOf(val.toLowerCase()) > -1), data.tree);\r\n\t\t\tsetObjectList(prevObjectList => ({\r\n\t\t\t\t...prevObjectList,\r\n\t\t\t\t'root': root.sort(),\r\n\t\t\t\t'tree': tree\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t}, 750);\r\n\t}\r\n\t\r\n\t//\r\n\tconst selectObject = (e, val) => {\r\n\t\tconst selected = objectList.tree[val] || null; // tree only holds channels, thus null will be a state\r\n\t\t\r\n\t\tif (selected === null) {\r\n\t\t\tval = val.indexOf(' ') === -1 ? val : '';\r\n\t\t\tselectedItem.current = val;\r\n\t\t\t_onChange(val);\r\n\t\t}\r\n\t}\r\n\t\r\n\t//\r\n\tconst renderTree = key => {\r\n\t\tlet states = [];\r\n\t\tlet children = [];\r\n\t\t\r\n\t\t// channels\r\n\t\tif (objectList.tree[key]) {\r\n\t\t\tObject.keys(objectList.tree[key]).forEach(channelKey => {\r\n\t\t\t\tconst child = objectList.tree[key][channelKey];\r\n\t\t\t\t\r\n\t\t\t\tif (child.type === 'state') {\r\n\t\t\t\t\tstates.push(channelKey);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tchildren.push(renderTree(channelKey));\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\t// states\r\n\t\tif (states.length > 0) {\r\n\t\t\tchildren = children.concat(\r\n\t\t\t\tstates.map(stateKey => <Item key={stateKey} error={(stateKey.indexOf(' ') > -1)} nodeId={stateKey} label={<Entry key={stateKey} error={(stateKey.indexOf(' ') > -1)} id={stateKey.substr(stateKey.lastIndexOf('.')+1)} {...objectList.tree[stateKey.substr(0, stateKey.lastIndexOf('.'))][stateKey]} />} />)\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\tconst channel = key.substr(key.lastIndexOf('.')+1);\r\n\t\tconst details = key.indexOf('.') > -1 ? objectList.tree[key.substr(0, key.lastIndexOf('.'))][key] : {}\r\n\t\treturn (\r\n\t\t\t<Item key={key} nodeId={key} children={children} label={<Entry key={key} group id={channel} {...details} />} />\r\n\t\t);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<Inputs.Fieldset>\r\n\t\t\t\t<Inputs.Text\r\n\t\t\t\t\tid='search'\r\n\t\t\t\t\tlabel='Search'\r\n\t\t\t\t\tonChange={search}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<div className={classes.divider} />\r\n\t\t\t\t<div style={{ margin: 'auto 0' }}>\r\n\t\t\t\t\t{objectList !== null && <span style={{ margin: 'auto 0' }}>{i18n.t('Last refresh') + ': ' + timeConverter.parseDate(objectList.updated, 'dd.MM.yyyy, HH:mm:ss')}</span>}\r\n\t\t\t\t\t<Inputs.Button\r\n\t\t\t\t\t\tlabel='refresh'\r\n\t\t\t\t\t\tstartIcon={<RefreshIcon />}\r\n\t\t\t\t\t\tonClick={() => setObjectList(null)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Inputs.Fieldset>\r\n\t\t\t<Divider />\r\n\t\t\t\r\n\t\t\t{(objectList === null || !objectList.root) ?\r\n\t\t\t<LinearProgress />\r\n\t\t\t:\r\n\t\t\t<TreeView\r\n\t\t\t\tclassName={classes.TreeView}\r\n\t\t\t\tdefaultCollapseIcon={<CollapseIcon />}\r\n\t\t\t\tdefaultExpandIcon={<ExpandIcon />}\r\n\t\t\t\tonNodeSelect={selectObject}\r\n\t\t\t\t>\r\n\t\t\t\t\r\n\t\t\t\t{objectList.root.map(key => renderTree(key))}\r\n\t\t\t</TreeView>}\r\n\t\t</Paper>\r\n\t);\r\n});\r\n\r\n/*\r\n *\r\n */\r\nconst Item = props => {\r\n\tconst { children, error, ...otherProps } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\treturn (\r\n\t\t<TreeItem\r\n\t\t\tclasses={{\r\n\t\t\t\troot: clsx(error && classes.TreeItemError, classes.TreeItem),\r\n\t\t\t\tcontent: classes.TreeItemContent,\r\n\t\t\t\texpanded: classes.TreeItemExpanded,\r\n\t\t\t\tselected: classes.TreeItemSelected,\r\n\t\t\t\tgroup: classes.TreeItemGroup,\r\n\t\t\t\tlabel: classes.TreeItemLabel\r\n\t\t\t}}\r\n\t\t\t\r\n\t\t\t{...otherProps}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t{children || null}\r\n\t\t</TreeItem>\r\n\t);\r\n}\r\n\r\n/*\r\n *\r\n */\r\nconst Entry = props => {\r\n\tconst { id, error, type, group, common } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst name = common && common.name ? common.name : '';\t\r\n\tconst EntryIcon = group ? GroupIcon : StateIcon;\r\n\treturn (\r\n\t\t<div className={clsx(error && classes.TreeItemError, classes.Entry, group && classes.Group)}>\r\n\t\t\t<EntryIcon color=\"inherit\" className={classes.EntryIcon} />\r\n\t\t\t<EntryText width=\"40%\" caption label={id} />\r\n\t\t\t{name.length > 60 ? \r\n\t\t\t\t<Tooltip title={name} arrow>\r\n\t\t\t\t\t<div style={{ width: '40%' }}>\r\n\t\t\t\t\t\t<EntryText label={name.substr(0, 60) + '...'} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t:\r\n\t\t\t\t<EntryText width=\"40%\" label={name} />\r\n\t\t\t}\r\n\t\t\t<EntryText width=\"10%\" label={type} />\r\n\t\t\t<EntryText width=\"10%\" label={common && common.role} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n/*\r\n *\r\n */\r\nconst EntryText = props => {\r\n\tconst { label, width, caption } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\treturn (\r\n\t\t<div style={{ width: width || '100%' }}>\r\n\t\t\t<Typography variant={caption ? 'caption' : 'body2'} className={classes.EntryText}>\r\n\t\t\t\t{(label && label[i18n.getLanguage()]) || label || ''}\r\n\t\t\t</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n/*\r\n *\r\n */\r\nexport const StateExplorerPopup = React.memo(props => {\r\n\tconst { open, _onClose, _onChange } = props;\r\n\t\r\n\tconst state = useRef(props.val);\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\theader={i18n.t('State Explorer')}\r\n\t\t\tactions={[\r\n\t\t\t\t<Inputs.Button key='action-cancel' variant=\"text\" onClick={_onClose} color=\"secondary\" label=\"Cancel\" />,\r\n\t\t\t\t<Inputs.Button key=\"action-save\" variant=\"text\" onClick={() => _onChange(state.current)} color=\"primary\" label=\"Apply\" />\r\n\t\t\t]}\r\n\t\t\t\r\n\t\t\tdense\r\n\t\t\tmaxWidth='lg'\r\n\t\t\tfullWidth={true}\r\n\t\t\t\r\n\t\t\topen={open}\r\n\t\t\tonClose={_onClose}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<StateExplorer {...props} _onChange={s => state.current = s} />\r\n\t\t</Dialog>\r\n\t);\r\n});\r\n\r\nexport default StateExplorer;\r\n"],"sourceRoot":""}