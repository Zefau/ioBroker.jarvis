{"version":3,"sources":["pages/ConfigurationPage/DevicesPage/ComponentConfigPage.js"],"names":["ComponentConfig","React","memo","props","Log","_","_onClose","_onChange","id","config","attributes","useState","open","setOpen","useEffect","undefined","componentConfiguration","Object","keys","map","configKey","configOption","val","_translate","info","otherConfigOption","label","i18n","t","selection","Tag","Inputs","type","key","divider","disableTypography","container","spacing","item","width","inputProps","style","textAlign","onChange","header","actions","Button","variant","onClick","color","dense","maxWidth","fullWidth","disablePadding"],"mappings":"0OA6BMA,EAAkBC,IAAMC,MAAK,SAAAC,GAClCC,UAAIC,EAAE,aAAc,yBAA0B,eADH,IAGnCC,EAAgDH,EAAhDG,SAAUC,EAAsCJ,EAAtCI,UAAWC,EAA2BL,EAA3BK,GAAIC,EAAuBN,EAAvBM,OAAQC,EAAeP,EAAfO,WAHE,EAKpBC,oBAAS,GALW,mBAKpCC,EALoC,KAK/BC,EAL+B,KAe3C,GAJAC,qBAAU,WACTD,EAAmB,OAAXJ,KACN,CAACA,IAEO,OAAPD,GAA0B,OAAXC,QAA8BM,IAAXN,EACrC,OAAO,KAIR,IAAMO,EAAyBC,OAAOC,KAAKT,GAAQU,KAAI,SAAAC,GACtD,IAAIC,EAAeZ,EAAOW,GADyC,EAEnEC,EAAuC,kBAAjBA,EAA4BA,EAAe,CAAE,MAASD,EAAW,SAA4BL,IAArBM,EAAaC,IAAoBD,EAAaC,IAAMD,GAC5IE,EAH6D,EAG7DA,WAAYC,EAHiD,EAGjDA,KAASC,EAHwC,qCAKnEA,EAAkBC,MAAQL,EAAaK,OAASN,EAChDK,EAAkBC,MAAQH,EAAaI,UAAKC,EAAEP,EAAaK,OAASL,EAAaK,MACjFD,EAAkBH,IAAMC,EAAaI,UAAKC,EAAEP,EAAaC,KAAOD,EAAaC,IAC7EG,EAAkBI,UAAmD,oBAAhCJ,EAAkBI,UAA2BJ,EAAkBI,UAAU1B,GAASsB,EAAkBI,UAEzI,IAAMC,EAAMC,UAAOV,EAAaW,MAAQ,QACxC,OACC,kBAAC,IAAD,CAAUC,IAAK,UAAYb,EAAWc,SAAO,GAC5C,kBAAC,IAAD,CAAcC,mBAAiB,GAC9B,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,GACxB,kBAAC,IAAD,CAAMC,MAAI,GAAC,kBAAC,UAAD,CAAMd,KAAMA,KACvB,kBAAC,IAAD,CAAMc,MAAI,GAAC,kBAAC,IAAD,KAAaX,UAAKC,EAAEH,EAAkBC,WAInD,kBAAC,IAAD,KACC,kBAACI,EAAD,eACCG,IAAK,mBAAqBzB,EAAK,IAAMY,EACrCZ,GAAI,mBAAqBA,EAAK,IAAMY,GAChCK,EAHL,CAKCC,MAAM,GACNa,MAAO,IACPC,WAAY,CACXC,MAAO,CAAEC,UAAW,UAGrBC,SAAU,SAACxC,EAAOmB,GAAR,OAAgBf,EAAUJ,EAAOmB,EAAKZ,YAQrD,OACC,kBAAC,UAAD,CACCkC,OAAQjB,UAAKC,EAAE,2BACfiB,QACC,kBAAC,UAAOC,OAAR,CAAeb,IAAI,cAAcc,QAAQ,OAAOC,QA1DnC,WACfnC,GAAQ,GACRP,KAwDoE2C,MAAM,UAAUvB,MAAM,UAGzFwB,OAAK,EACLC,SAAS,KACTC,WAAW,EACXxC,KAAMA,GAGN,kBAAC,IAAD,CAAMsC,OAAK,EAACG,gBAAc,GACxBrC,OAMUhB","file":"static/js/39.b68ab910.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n//import clsx from 'clsx'\r\n\r\nimport i18n from '../../../controller/i18n'\r\nimport Log from '../../../controller/Log'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Dialog from '../../../components/Dialog'\r\nimport Info from '../../../components/Info'\r\nimport Inputs from '../../../components/Inputs'\r\n\r\n\r\n/*\r\n * STYLES\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles(theme => ({\r\n}));\r\n */\r\n\r\n\r\n/*\r\n *\r\n */\r\nconst ComponentConfig = React.memo(props => {\r\n\tLog._('WidgetPage', 'RENDER ComponentConfig', 'development');\r\n\t//const classes = useStyles();\r\n\tconst { _onClose, _onChange, id, config, attributes } = props;\r\n\t\r\n\tconst [open,setOpen] = useState(false);\r\n\tconst onClose = () => {\r\n\t\tsetOpen(false)\r\n\t\t_onClose();\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetOpen(config !== null);\r\n\t}, [config]);\r\n\t\r\n\tif (id === null || config === null || config === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t// component configuration\r\n\tconst componentConfiguration = Object.keys(config).map(configKey => {\r\n\t\tlet configOption = config[configKey];\r\n\t\tconfigOption = typeof configOption === 'object' ? configOption : { 'label': configKey, 'val': configOption.val !== undefined ? configOption.val : configOption }\r\n\t\tlet { _translate, info, ...otherConfigOption } = configOption;\r\n\t\t\r\n\t\totherConfigOption.label = configOption.label || configKey;\r\n\t\totherConfigOption.label = _translate ? i18n.t(configOption.label) : configOption.label;\r\n\t\totherConfigOption.val = _translate ? i18n.t(configOption.val) : configOption.val;\r\n\t\totherConfigOption.selection = typeof otherConfigOption.selection === 'function' ? otherConfigOption.selection(props) : otherConfigOption.selection;\r\n\t\t\r\n\t\tconst Tag = Inputs[configOption.type || 'Text'];\r\n\t\treturn (\r\n\t\t\t<ListItem key={'Config-' + configKey} divider>\r\n\t\t\t\t<ListItemText disableTypography>\r\n\t\t\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t\t\t<Grid item><Info info={info} /></Grid>\r\n\t\t\t\t\t\t<Grid item><Typography>{i18n.t(otherConfigOption.label)}</Typography></Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</ListItemText>\r\n\t\t\t\t\r\n\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t<Tag\r\n\t\t\t\t\t\tkey={'componentConfig.' + id + '.' + configKey}\r\n\t\t\t\t\t\tid={'componentConfig.' + id + '.' + configKey}\r\n\t\t\t\t\t\t{...otherConfigOption}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlabel=''\r\n\t\t\t\t\t\twidth={180}\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tstyle: { textAlign: 'right' }\r\n\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tonChange={(props, val) => _onChange(props, val, attributes)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t</ListItem>\r\n\t\t);\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\theader={i18n.t('Component configuration')}\r\n\t\t\tactions={\r\n\t\t\t\t<Inputs.Button key=\"action-save\" variant=\"text\" onClick={onClose} color=\"primary\" label=\"Apply\" />\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdense\r\n\t\t\tmaxWidth='xs'\r\n\t\t\tfullWidth={true}\r\n\t\t\topen={open}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<List dense disablePadding>\r\n\t\t\t\t{componentConfiguration}\r\n\t\t\t</List>\r\n\t\t</Dialog>\r\n\t);\r\n});\r\n\r\nexport default ComponentConfig;\r\n"],"sourceRoot":""}