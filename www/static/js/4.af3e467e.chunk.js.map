{"version":3,"sources":["components/Collapsible.js","../../../../AppData/Roaming/npm/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","pages/ConfigurationPage/DevicesPage/ImportDevicesPage.js","../node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","../node_modules/@material-ui/icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","../node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","../node_modules/@material-ui/core/esm/Accordion/Accordion.js","../node_modules/@babel/runtime/helpers/esm/toArray.js"],"names":["useStyles","makeStyles","theme","transition","duration","transitions","shortest","expanded","Collapsible","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","CollapsibleSummary","minHeight","padding","spacing","CollapsibleSummaryContent","flexGrow","CollapsibleSummaryExpandIcon","transform","CollapsibleDetails","CollapsibleContext","React","createContext","forwardRef","props","ref","arr","defaultExpanded","childrenProp","children","className","other","classes","useState","undefined","setExpanded","handleChange","useCallback","event","Children","toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","contextValue","useMemo","toggle","Paper","elevation","root","clsx","Provider","value","Collapse","in","timeout","aria-labelledby","id","role","expandIcon","onClick","onBlur","onFocusVisible","useContext","ButtonBase","focusRipple","disableRipple","component","aria-expanded","stopPropagation","IconButton","size","tabIndex","aria-hidden","fullWidth","width","heading","paddingRight","transparent","ListItem","gap","ImportDevicesPage","loading","setLoading","importDevices","setImportDevices","componentWillUnmount","useRef","search","filter","adapters","Object","keys","Adapters","foundDevicesByManufacturer","categories","i18n","t","_markDeviceToImport","device","addOrRemove","moveDeviceToIgnore","current","devices","findIndex","d","moveDeviceToNew","attributes","ignore","splice","push","hash","uuid","prevImportDevices","deviceIds","indexOf","_created","Date","now","nextImportDevices","_setImportDeviceList","foundDevices","_new","_added","_incorrect","_ignored","deviceList","newDevices","forEach","res","index","reason","categoryKey","status","states","length","manufacturer","namespace","note","error","message","header","actions","Button","onClose","label","variant","color","Devices","then","catch","err","Log","_","importEnums","disabled","onImport","values","dense","maxWidth","open","Fieldset","FieldsetItem","AdapterList","_setSearch","attribute","action","Array","isArray","adapter","map","key","Category","memo","name","DeviceList","prevProps","nextProps","allSelected","setAllSelected","Device","category","button","prevSelected","Checkbox","checked","primary","deviceChecked","setDeviceChecked","useEffect","markDeviceToImport","prevChecked","inputProps","disableTypography","DeviceStates","stateKey","DeviceState","state","style","function","container","item","xs","searchResults","adapterKey","AdapterItem","selected","RadioGroup","onChange","val","inputs","required","e","adapterName","default","setChecked","title","replace","deviceObjectType","devicePattern","AccordionContext","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","_default","createElement","AccordionSummary","IconButtonProps","_objectWithoutProperties","_React$useState","focusedState","setFocusedState","_React$useContext","_React$useContext$dis","_extends","focused","edge","withStyles","cursor","focus","disabledOpacity","AccordionDetails","Accordion","_props$defaultExpande","_props$disabled","expandedProp","_props$square","square","_props$TransitionComp","TransitionComponent","TransitionProps","_useControlled","useControlled","controlled","_useControlled2","_slicedToArray","setExpandedState","_React$Children$toArr","_React$Children$toArr2","slice","rounded","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"mappings":"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","file":"static/js/4.af3e467e.chunk.js","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react'\r\nimport clsx from 'clsx'\r\n\r\nimport ButtonBase from '@material-ui/core/ButtonBase'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport ExpandIcon from '@material-ui/icons/KeyboardArrowRight'\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => {\r\n\tconst transition = {\r\n\t\tduration: theme.transitions.duration.shortest,\r\n\t};\r\n\t\r\n\treturn {\r\n\t\texpanded: {\r\n\t\t},\r\n\t\tCollapsible: {\r\n\t\t\tposition: 'relative',\r\n\t\t\ttransition: theme.transitions.create(['margin'], transition),\r\n\t\t\t'&:before': {\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\tleft: 0,\r\n\t\t\t\ttop: -1,\r\n\t\t\t\tright: 0,\r\n\t\t\t\theight: 1,\r\n\t\t\t\tcontent: '\"\"',\r\n\t\t\t\topacity: 1,\r\n\t\t\t\tbackgroundColor: theme.palette.divider,\r\n\t\t\t\ttransition: theme.transitions.create(['opacity', 'background-color'], transition),\r\n\t\t\t},\r\n\t\t\t'&:first-child': {\r\n\t\t\t\t'&:before': {\r\n\t\t\t\t\tdisplay: 'none',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'&$expanded': {\r\n\t\t\t\tmargin: '16px 0',\r\n\t\t\t\t'&:first-child': {\r\n\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t},\r\n\t\t\t\t'&:last-child': {\r\n\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t},\r\n\t\t\t\t'&:before': {\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'&$expanded + &': {\r\n\t\t\t\t'&:before': {\r\n\t\t\t\t\tdisplay: 'none',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t},\r\n\t\tCollapsibleSummary: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tminHeight: 8 * 6,\r\n\t\t\ttransition: theme.transitions.create(['min-height', 'background-color'], transition),\r\n\t\t\tpadding: theme.spacing(0, 2),\r\n\t\t\t'&$expanded': {\r\n\t\t\t\tminHeight: 64,\r\n\t\t\t}\r\n\t\t},\r\n\t\tCollapsibleSummaryContent: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexGrow: 1,\r\n\t\t\ttransition: theme.transitions.create(['margin'], transition),\r\n\t\t\tmargin: '12px 0',\r\n\t\t\t\r\n\t\t\t'&$expanded': {\r\n\t\t\t\tmargin: '20px 0',\r\n\t\t\t},\r\n\t\t},\r\n\t\tCollapsibleSummaryExpandIcon: {\r\n\t\t\ttransform: 'rotate(0deg)',\r\n\t\t\ttransition: theme.transitions.create('transform', transition),\r\n\t\t\t'&:hover': {\r\n\t\t\t\t// Disable the hover effect for the IconButton,\r\n\t\t\t\t// because a hover effect should apply to the entire Expand button and\r\n\t\t\t\t// not only to the IconButton.\r\n\t\t\t\tbackgroundColor: 'transparent',\r\n\t\t\t},\r\n\t\t\t'&$expanded': {\r\n\t\t\t\ttransform: 'rotate(90deg)',\r\n\t\t\t},\r\n\t\t},\r\n\t\tCollapsibleDetails: {\r\n\t\t\t//display: 'flex',\r\n\t\t\tpadding: theme.spacing(0, 2, 2, 4),\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n/*\r\n *\r\n */\r\nconst CollapsibleContext = React.createContext({});\r\n\r\nexport default React.forwardRef(function Collapsible(props, ref) {\r\n\tconst { expanded: defaultExpanded, children: childrenProp, className, ...other } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst [expanded, setExpanded] = useState(defaultExpanded !== undefined ? defaultExpanded : false);\r\n\tconst handleChange = useCallback(\r\n\t\t(event) => {\r\n\t\t\tsetExpanded(!expanded);\r\n\t\t},\r\n\t\t[expanded, setExpanded]\r\n\t);\r\n\t\r\n\tconst [summary, ...children] = React.Children.toArray(childrenProp);\r\n\tconst contextValue = useMemo(() => ({ expanded, toggle: handleChange }), [ expanded, handleChange ]);\r\n\t\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\televation={0} \r\n\t\t\tclasses={{ root: clsx(classes.Collapsible, { [classes.expanded]: expanded }, className) }}\r\n\t\t\tref={ref}\r\n\t\t\t{...other}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<CollapsibleContext.Provider value={contextValue}>{summary}</CollapsibleContext.Provider>\r\n\t\t\t<Collapse in={expanded} timeout=\"auto\">\r\n\t\t\t\t<div aria-labelledby={summary.props.id} id={summary.props['aria-controls']} role=\"region\">\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</Collapse>\r\n\t\t</Paper>\r\n\t);\r\n});\r\n\r\n/*\r\n *\r\n */\r\nexport const CollapsibleSummary = React.forwardRef(function CollapsibleSummary(props, ref) {\r\n\tconst { children, className, expandIcon, onBlur, onClick, onFocusVisible, ...other } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst { expanded, toggle } = React.useContext(CollapsibleContext);\r\n\tconst handleChange = (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\t\r\n\t\tif (toggle) {\r\n\t\t\ttoggle(event);\r\n\t\t}\r\n\t\tif (onClick) {\r\n\t\t\tonClick(event);\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<ButtonBase\r\n\t\t\tfocusRipple={false}\r\n\t\t\tdisableRipple\r\n\t\t\tcomponent=\"div\"\r\n\t\t\taria-expanded={expanded}\r\n\t\t\tclassName={clsx(classes.CollapsibleSummary, { [classes.expanded]: expanded }, className)}\r\n\t\t\tonClick={handleChange}\r\n\t\t\tref={ref}\r\n\t\t\t{...other}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<IconButton\r\n\t\t\t\tclassName={clsx(classes.CollapsibleSummaryExpandIcon, { [classes.expanded]: expanded })}\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\ttabIndex={null}\r\n\t\t\t\trole={null}\r\n\t\t\t\taria-hidden\r\n\t\t\t\t>\r\n\t\t\t\t\r\n\t\t\t\t{expandIcon ? expandIcon : <ExpandIcon />}\r\n\t\t\t</IconButton>\r\n\t\t\t<div className={clsx(classes.CollapsibleSummaryContent, { [classes.expanded]: expanded })}>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</ButtonBase>\r\n\t);\r\n});\r\n\r\n/*\r\n *\r\n */\r\nexport const CollapsibleDetails = React.forwardRef(function CollapsibleDetails(props, ref) {\r\n\tconst { className, ...other } = props;\r\n\tconst classes = useStyles();\r\n\r\n\treturn <div className={clsx(classes.CollapsibleDetails, className)} ref={ref} {...other} />;\r\n});\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import React, { useState, useEffect, useRef } from 'react'\r\n//import clsx from 'clsx'\r\nimport { v1 as uuid } from 'uuid'\r\n\r\nimport Log from '../../../controller/Log'\r\nimport i18n from '../../../controller/i18n'\r\nimport Devices from '../../../controller/Devices'\r\nimport Adapters from '../../../config/adapters'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\n\r\nimport Collapsible, { CollapsibleSummary, CollapsibleDetails } from '../../../components/Collapsible'\r\nimport Dialog from '../../../components/Dialog'\r\nimport Inputs from '../../../components/Inputs'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tfullWidth: {\r\n\t\twidth: '100%',\r\n\t},\r\n\theading: {\r\n\t\tpaddingRight: theme.spacing()\r\n\t},\r\n\ttransparent: {\r\n\t\tbackgroundColor: 'transparent',\r\n\t},\r\n\tListItem: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tgap: {\r\n\t\tmargin: '0 auto'\r\n\t}\r\n}));\r\n\r\n\r\nexport default function ImportDevicesPage(props) {\r\n\tconst [loading,setLoading] = useState(null);\r\n\tconst [importDevices,setImportDevices] = useState({});\r\n\tconst componentWillUnmount = useRef(false);\r\n\t\r\n\tlet search = useRef({\r\n\t\tfilter: 'all',\r\n\t\tadapters: Object.keys(Adapters) || [],\r\n\t});\r\n\t\r\n\tlet foundDevicesByManufacturer = useRef({});\r\n\tlet categories = useRef({\r\n\t\t'_new': {\r\n\t\t\t'hash': '',\r\n\t\t\t'name': i18n.t('New Devices'),\r\n\t\t\t'expanded': true,\r\n\t\t\t'devices': []\r\n\t\t},\r\n\t\t'_added': {\r\n\t\t\t'hash': '',\r\n\t\t\t'name': i18n.t('Devices that have been added already'),\r\n\t\t\t'devices': []\r\n\t\t},\r\n\t\t'_incorrect': {\r\n\t\t\t'hash': '',\r\n\t\t\t'name': i18n.t('Devices with incorrect configuration (states not found)'),\r\n\t\t\t'devices': []\r\n\t\t},\r\n\t\t'_ignored': {\r\n\t\t\t'hash': '',\r\n\t\t\t'name': i18n.t('Devices marked as ignored'),\r\n\t\t\t'devices': []\r\n\t\t},\r\n\t});\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst _onClose = () => {\r\n\t\tcomponentWillUnmount.current = true;\r\n\t\tprops.onClose && props.onClose();\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst _importDevices = () => props.onImport && props.onImport(importDevices);\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst _markDeviceToImport = (device, addOrRemove = null) => {\r\n\t\t\r\n\t\t// mark device as ignored\r\n\t\tlet moveDeviceToIgnore = categories.current['_new'].devices.findIndex(d => d.id === device.id);\r\n\t\tlet moveDeviceToNew = categories.current['_ignored'].devices.findIndex(d => d.id === device.id);\r\n\t\t\r\n\t\tif (device.attributes && device.attributes.ignore === true && moveDeviceToIgnore > -1) {\r\n\t\t\tcategories.current['_new'].devices.splice(moveDeviceToIgnore, 1);\r\n\t\t\tcategories.current['_ignored'].devices.push(device);\r\n\t\t\tcategories.current['_ignored'].hash = uuid();\r\n\t\t\tcategories.current['_new'].hash = uuid();\r\n\t\t}\r\n\t\telse if (device.attributes && device.attributes.ignore === false && moveDeviceToNew > -1) {\r\n\t\t\tcategories.current['_ignored'].devices.splice(moveDeviceToNew, 1);\r\n\t\t\tcategories.current['_new'].devices.push(device);\r\n\t\t\tcategories.current['_ignored'].hash = uuid();\r\n\t\t\tcategories.current['_new'].hash = uuid();\r\n\t\t}\r\n\t\t\r\n\t\t// mark device to import\r\n\t\tsetImportDevices(prevImportDevices => {\r\n\t\t\tdevice.attributes = device.attributes || {}\r\n\t\t\t\r\n\t\t\tlet deviceIds = Object.keys(prevImportDevices);\r\n\t\t\tif (addOrRemove === true || (addOrRemove === null && (deviceIds.indexOf(device.id) === -1 || device.attributes.ignore === true || device.attributes.ignore === false))) {\r\n\t\t\t\tdevice.attributes.ignore = device.attributes.ignore === false ? null : device.attributes.ignore;\r\n\t\t\t\tdevice.attributes._created = Date.now();\r\n\t\t\t\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prevImportDevices,\r\n\t\t\t\t\t[device.id]: device\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// unmark device from import\r\n\t\t\telse {\r\n\t\t\t\tlet nextImportDevices = { ...prevImportDevices }\r\n\t\t\t\tdelete nextImportDevices[device.id];\r\n\t\t\t\treturn nextImportDevices;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst _setSearch = (attribute, value, action = null) => {\r\n\t\t\r\n\t\tif (Array.isArray(search.current[attribute])) {\r\n\t\t\t\r\n\t\t\t// remove from array\r\n\t\t\tif (action === 'remove' || (action === null && search.current[attribute].indexOf(value) > -1)) {\r\n\t\t\t\tsearch.current[attribute] = search.current[attribute].filter(adapter => adapter !== value);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// add to array\r\n\t\t\telse {\r\n\t\t\t\tsearch.current[attribute].push(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsearch.current[attribute] = value;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst _setImportDeviceList = foundDevices => {\r\n\t\t\r\n\t\t// only show result list if dialogue has not been closed\r\n\t\tif (componentWillUnmount.current !== false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t// reset last search\r\n\t\tfoundDevicesByManufacturer.current = {}\r\n\t\tcategories.current._new.devices = [];\r\n\t\tcategories.current._added.devices = [];\r\n\t\tcategories.current._incorrect.devices = [];\r\n\t\tcategories.current._ignored.devices = [];\r\n\t\t\r\n\t\t// add devices\r\n\t\tlet deviceList = props.devices;\r\n\t\tlet newDevices = {}\r\n\t\t\r\n\t\tfoundDevices.forEach((res, index) => {\r\n\t\t\tlet device = res.value || res.reason.device;\r\n\t\t\tdevice.attributes = device.attributes || {}\r\n\t\t\t\r\n\t\t\t// get category\r\n\t\t\tlet categoryKey = '_new';\r\n\t\t\tif (res.status === 'fulfilled' && res.value && res.value.states && Object.keys(res.value.states).length > 0) {\r\n\t\t\t\t\r\n\t\t\t\t// device added already\r\n\t\t\t\tif (deviceList[device.id] !== undefined) {\r\n\t\t\t\t\tcategoryKey = '_added';\r\n\t\t\t\t\t\r\n\t\t\t\t\t// device has been ignored\r\n\t\t\t\t\tif (deviceList[device.id].attributes && deviceList[device.id].attributes.ignore === true) {\r\n\t\t\t\t\t\tcategoryKey = '_ignored';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewDevices[device.id] = device;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// by manufacturer\r\n\t\t\t\tif (device.attributes.manufacturer && device.attributes.manufacturer.namespace) {\r\n\t\t\t\t\tfoundDevicesByManufacturer.current[device.attributes.manufacturer.namespace] = foundDevicesByManufacturer.current[device.attributes.manufacturer.namespace] || [];\r\n\t\t\t\t\tfoundDevicesByManufacturer.current[device.attributes.manufacturer.namespace].push(device.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcategoryKey = '_incorrect';\r\n\t\t\t\tdevice.states = null;\r\n\t\t\t\tdevice.attributes.note = device.attributes.note || (res.reason && res.reason.error && res.reason.error.message) || i18n.t('No correct defined states found. The device may be unknown. Please help the developer to add support for this device and report to Github.');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcategories.current[categoryKey].devices.push(device);\r\n\t\t});\r\n\t\t\r\n\t\tsetImportDevices(newDevices);\r\n\t\tsetLoading('done');\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst _getDevices = () => {\r\n\t\tsetLoading('loading');\r\n\t\t\r\n\t\t/*\r\n\t\t * retrieve devices\r\n\t\t */\r\n\t\tif (search.current.filter === 'all') {\r\n\t\t\tDevices.importDevices(search.current.adapters)\r\n\t\t\t\t.then(_setImportDeviceList)\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tLog._('ImportDevicesPage', 'IMPORT_DEVICES: ' + err.message, 'error');\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t * retrieve enums\r\n\t\t */\r\n\t\telse {\r\n\t\t\tDevices.importEnums('functions', search.current.adapters)\r\n\t\t\t\t.then(_setImportDeviceList)\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tLog._('ImportDevicesPage', 'IMPORT_ENUMS: ' + err.message, 'error');\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\t/*\r\n\t *\r\n\t */\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\theader={i18n.t('Devices Import')}\r\n\t\t\tactions={<>\r\n\t\t\t\t<Inputs.Button width=\"auto\" id='action-cancel' onClick={_onClose} label='Cancel' variant=\"text\" color=\"secondary\" />\r\n\t\t\t\t<Inputs.Button width=\"auto\" id='action-read' onClick={_getDevices} label='Read adapters' variant=\"text\" disabled={loading === 'loading'} loading={loading === 'loading'} />\r\n\t\t\t\t{loading === 'done' && (\r\n\t\t\t\t\t<Inputs.Button\r\n\t\t\t\t\t\twidth=\"auto\"\r\n\t\t\t\t\t\tid='action-import'\r\n\t\t\t\t\t\tonClick={_importDevices}\r\n\t\t\t\t\t\tlabel={i18n.t('Import selected devices') + ' (' + Object.values(importDevices).filter(device => !device.attributes || device.attributes.ignore !== true).length + ')'}\r\n\t\t\t\t\t\tdisabled={Object.keys(importDevices).length === 0}\r\n\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t/>)}\r\n\t\t\t</>}\r\n\t\t\t\r\n\t\t\tdense\r\n\t\t\tmaxWidth='md'\r\n\t\t\tfullWidth={true}\r\n\t\t\t\r\n\t\t\topen={true}\r\n\t\t\tonClose={props.onClose}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<Inputs.Fieldset label='Adapters'>\r\n\t\t\t\t<Inputs.FieldsetItem>\r\n\t\t\t\t\t<AdapterList\r\n\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\tfoundDevicesByManufacturer={foundDevicesByManufacturer}\r\n\t\t\t\t\t\tsearch={search}\r\n\t\t\t\t\t\t_setSearch={_setSearch}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t</Inputs.FieldsetItem>\r\n\t\t\t</Inputs.Fieldset>\r\n\t\t\t{loading !== null && <Inputs.Fieldset label='Devices'>\r\n\t\t\t\t<Inputs.FieldsetItem>\r\n\t\t\t\t\t{loading === 'loading' && <CircularProgress />}\r\n\t\t\t\t\t{loading === 'done' && Object.keys(categories.current).map(key => <Category key={'Category-' + key} {...{ id: key, ...categories.current[key] }} _markDeviceToImport={_markDeviceToImport} />)}\r\n\t\t\t\t</Inputs.FieldsetItem>\r\n\t\t\t</Inputs.Fieldset>}\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n\r\n\r\n/*\r\n *\r\n */\r\nconst Category = React.memo(props => {\r\n\tconst classes = useStyles();\r\n\tconst { id, name, expanded, devices } = props;\r\n\t\r\n\treturn (\r\n\t\t<Accordion classes={{ root: classes.fullWidth }} key={id} defaultExpanded={expanded === true}>\r\n\t\t\t<AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n\t\t\t\t<Typography className={classes.heading}>{name}</Typography>\r\n\t\t\t\t<Chip color=\"primary\" size=\"small\" label={devices.length} />\r\n\t\t\t</AccordionSummary>\r\n\t\t\t<AccordionDetails>\r\n\t\t\t\t<DeviceList {...props} />\r\n\t\t\t</AccordionDetails>\r\n\t\t</Accordion>\r\n\t)\r\n\t\r\n}, (prevProps, nextProps) => prevProps.hash === nextProps.hash);\r\n\r\n/*\r\n *\r\n */\r\nconst DeviceList = props => {\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst [allSelected,setAllSelected] = useState(props.id === '_new' ? true : false);\r\n\tconst deviceList = props.devices.map(device => {\r\n\t\treturn (\r\n\t\t\t<Device\r\n\t\t\t\tkey={'Category-' + props.id + '-Device-' + device.id}\r\n\t\t\t\tallSelected={allSelected}\r\n\t\t\t\tcategory={props}\r\n\t\t\t\tdevice={device}\r\n\t\t\t\t_markDeviceToImport={props._markDeviceToImport}\r\n\t\t\t\t/>\r\n\t\t);\r\n\t});\r\n\t\r\n\tconst _onSelected = () => {\r\n\t\tsetAllSelected(prevSelected => prevSelected === false);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<List classes={{ root: classes.fullWidth }} dense>\r\n\t\t\t{props.id !== '_incorrect' && props.id !== '_ignored' && <ListItem dense button divider onClick={_onSelected}>\r\n\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<Inputs.Checkbox\r\n\t\t\t\t\t\tchecked={allSelected}\r\n\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemText primary={<strong>{i18n.t('(Un)Select all devices')}</strong>} />\r\n\t\t\t</ListItem>}\r\n\t\t\t{deviceList}\r\n\t\t</List>\r\n\t);\r\n}\r\n\r\n/*\r\n *\r\n */\r\nconst Device = React.memo(props => {\r\n\tconst classes = useStyles();\r\n\tconst { category, device, _markDeviceToImport } = props;\r\n\t\r\n\tconst [deviceChecked,setDeviceChecked] = useState(category.id === '_new' || (device.attributes && device.attributes.ignore !== undefined) ? true : false);\r\n\tuseEffect(() => {\r\n\t\tsetDeviceChecked(props.allSelected);\r\n\t\tprops._markDeviceToImport(props.device, props.allSelected);\r\n\t\t\r\n\t}, [props]);\r\n\t\r\n\tconst markDeviceToImport = () => {\r\n\t\tsetDeviceChecked(prevChecked => prevChecked !== true);\r\n\t\t_markDeviceToImport && _markDeviceToImport(device);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<ListItem\r\n\t\t\tkey={device.id}\r\n\t\t\tbutton={category.id !== '_incorrect' && category.id !== '_ignored'}\r\n\t\t\tdense\r\n\t\t\tdivider\r\n\t\t\tonClick={() => category.id !== '_incorrect' && category.id !== '_ignored' && markDeviceToImport(device)}\r\n\t\t\t>\r\n\t\t\t\r\n\t\t\t<ListItemIcon>\r\n\t\t\t\t<Inputs.Checkbox\r\n\t\t\t\t\tid={device.id}\r\n\t\t\t\t\tchecked={deviceChecked}\r\n\t\t\t\t\tdisabled={category.id === '_incorrect' || category.id === '_ignored'}\r\n\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\tdisableRipple\r\n\t\t\t\t\tinputProps={{ 'aria-labelledby': device.id }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t</ListItemIcon>\r\n\t\t\t<ListItemText classes={{ root: classes.ListItem }} disableTypography>\r\n\t\t\t\t<DeviceStates device={device} />\r\n\t\t\t\t\r\n\t\t\t</ListItemText>\r\n\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t{category.id === '_new' && <Inputs.Button\r\n\t\t\t\t\twidth=\"auto\"\r\n\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\tlabel='ignore'\r\n\t\t\t\t\tonClick={event => {\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdevice.attributes = {\r\n\t\t\t\t\t\t\t...device.attributes,\r\n\t\t\t\t\t\t\t'ignore': true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tmarkDeviceToImport(device);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/>}\r\n\t\t\t\t\t\r\n\t\t\t\t{category.id === '_ignored' && <Inputs.Button\r\n\t\t\t\t\twidth=\"auto\"\r\n\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\tlabel='move to new devices'\r\n\t\t\t\t\tonClick={event => {\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdevice.attributes = {\r\n\t\t\t\t\t\t\t...device.attributes,\r\n\t\t\t\t\t\t\t'ignore': false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tmarkDeviceToImport(device);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/>}\r\n\t\t\t\t\t\r\n\t\t\t</ListItemSecondaryAction>\r\n\t\t</ListItem>\r\n\t)\r\n\t\r\n}, (prevProps, nextProps) => prevProps.device.attributes.ignore === nextProps.device.attributes.ignore && prevProps.allSelected === nextProps.allSelected);\r\n\r\n/*\r\n *\r\n */\r\nconst DeviceStates = React.memo(props => {\r\n\tconst { device } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst states = !device.states ? <Typography display=\"block\">{device.attributes.note}</Typography> : Object.keys(device.states).map(stateKey => <DeviceState key={'DeviceState-' + device.id + '-' + stateKey} state={{ ...device.states[stateKey], 'key': stateKey }} />);\r\n\t\r\n\treturn (\r\n\t\t<Collapsible classes={{ root: classes.transparent }} key={'DeviceStates-' + device.id}>\r\n\t\t\t<CollapsibleSummary>\r\n\t\t\t\t<Typography className={classes.heading}>{device.name}</Typography>\r\n\t\t\t\t{device.attributes && device.attributes.manufacturer && <Chip color=\"secondary\" size=\"small\" label={device.attributes.manufacturer.name} />}\r\n\t\t\t</CollapsibleSummary>\r\n\t\t\t<CollapsibleDetails>\r\n\t\t\t\t<Typography style={{ margin: '0 0 8px 0' }}>{i18n.t('Function')}: {i18n.t(device.function)} <code>{device.function}</code></Typography>\r\n\t\t\t\t{states}\r\n\t\t\t</CollapsibleDetails>\r\n\t\t</Collapsible>\r\n\t);\r\n});\r\n\r\n/*\r\n *\r\n */\r\nconst DeviceState = React.memo(props => {\r\n\tconst { state } = props;\r\n\t\r\n\treturn (\r\n\t\t<Grid container spacing={2}>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Typography display=\"block\"><strong>{state.key}</strong></Typography>\r\n\t\t\t\t\r\n\t\t\t\t<Typography component=\"span\" variant=\"subtitle1\">{i18n.t('State')}: </Typography>\r\n\t\t\t\t<code>{state.state || '-'}</code>\r\n\t\t\t\t<br />\r\n\t\t\t\t\r\n\t\t\t\t<Typography component=\"span\" variant=\"subtitle1\">{i18n.t('Action')}: </Typography>\r\n\t\t\t\t<code>{state.action || '-'}</code>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n\r\n/*\r\n *\r\n */\r\nconst AdapterList = React.memo(props => {\r\n\tconst { loading, foundDevicesByManufacturer, search, _setSearch } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst [allSelected,setAllSelected] = useState(true);\r\n\tconst _onSelected = e => {\r\n\t\tsearch.current.adapters = allSelected ? [] : (Object.keys(Adapters) || []);\r\n\t\tsetAllSelected(prevSelected => prevSelected === false);\r\n\t}\r\n\t\r\n\tlet searchResults = 0;\r\n\tconst adapters = Object.keys(Adapters).map(adapterKey => {\r\n\t\tconst adapter = { ...Adapters[adapterKey], 'namespace': adapterKey, 'devices': foundDevicesByManufacturer.current[adapterKey] || [] }\r\n\t\tsearchResults = searchResults + (adapter.devices && Array.isArray(adapter.devices) ? adapter.devices.length : 0);\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<AdapterItem\r\n\t\t\t\t{...props}\r\n\t\t\t\tkey={'AdapterItem-' + adapterKey}\r\n\t\t\t\tadapter={adapter}\r\n\t\t\t\tselected={search.current.adapters.indexOf(adapter.namespace) > -1}\r\n\t\t\t\t/>\r\n\t\t);\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Inputs.RadioGroup\r\n\t\t\t\tonChange={(props, val) => _setSearch('filter', val)}\r\n\t\t\t\tlabel='Search the adapter structure for all devices or only devices added to enums'\r\n\t\t\t\tinputs={[\r\n\t\t\t\t\t{ label: 'Search adapter structure for all devices', value: 'all' },\r\n\t\t\t\t\t{ label: 'Search only for devices added to enums', value: 'enums' }\r\n\t\t\t\t]}\r\n\t\t\t\trequired\r\n\t\t\t\tval={search.current.filter}\r\n\t\t\t\t/>\r\n\t\t\t\r\n\t\t\t<Collapsible key={'AdapterList-' + loading} expanded={loading !== 'done'}>\r\n\t\t\t\t<CollapsibleSummary>\r\n\t\t\t\t\t<Typography style={{ margin: 'auto 0' }}>{i18n.t('Adapter List')}</Typography>\r\n\t\t\t\t\t<div className={classes.gap}></div>\r\n\t\t\t\t\t{searchResults > 0 && <Chip color=\"secondary\" label={i18n.t('Devices') + ': ' + searchResults} />}\r\n\t\t\t\t</CollapsibleSummary>\r\n\t\t\t\t<CollapsibleDetails>\r\n\t\t\t\t\t<List classes={{ root: classes.fullWidth }} dense>\r\n\t\t\t\t\t\t<ListItem dense button divider onClick={_onSelected}>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<Inputs.Checkbox\r\n\t\t\t\t\t\t\t\t\tchecked={allSelected}\r\n\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText primary={<strong>{i18n.t('(Un)Select all adapters')}</strong>} />\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t{adapters}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</CollapsibleDetails>\r\n\t\t\t</Collapsible>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\n/*\r\n *\r\n */\r\nconst AdapterItem = props => {\r\n\tconst { adapter, selected, _setSearch } = props;\r\n\tconst adapterName = adapter.default;\r\n\t\r\n\tconst [checked,setChecked] = useState(selected);\r\n\tuseEffect(() => {setChecked(selected)}, [selected]);\r\n\t\r\n\tconst setAdapter = () => {\r\n\t\tsetChecked(prevChecked => prevChecked !== true);\r\n\t\t_setSearch('adapters', adapter.namespace);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<ListItem key={adapter.namespace} dense button divider onClick={setAdapter}>\r\n\t\t\t<ListItemIcon>\r\n\t\t\t\t<Inputs.Checkbox\r\n\t\t\t\t\tid={adapter.namespace}\r\n\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\tdisableRipple\r\n\t\t\t\t\tinputProps={{ 'aria-labelledby': adapterName }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t</ListItemIcon>\r\n\t\t\t<ListItemText disableTypography>\r\n\t\t\t\t<Typography display=\"inline\">{adapterName + ' ' + i18n.t('adapter')}</Typography>\r\n\t\t\t\t<span style={{ 'marginLeft': 2, 'verticalAlign': 'bottom' }}>\r\n\t\t\t\t\t<Tooltip title={i18n.t('import#warning').replace('{deviceObjectType}', adapter.deviceObjectType || 'device').replace('{devicePattern}', adapter.devicePattern)}>\r\n\t\t\t\t\t\t<InfoIcon color=\"primary\" />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</span>\r\n\t\t\t</ListItemText>\r\n\t\t\t\r\n\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t{adapter.devices && Array.isArray(adapter.devices) && adapter.devices.length > 0 && <Chip color=\"primary\" size=\"small\" label={i18n.t('Devices') + ': ' + adapter.devices.length} />}\r\n\t\t\t</ListItemSecondaryAction>\r\n\t\t</ListItem>\r\n\t)\r\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the accordion will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"sourceRoot":""}