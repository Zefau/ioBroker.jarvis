{"version":3,"sources":["components/Progress.js"],"names":["useStyles","makeStyles","theme","LinearProgress","props","className","onCompleted","offset","total","classes","timer","useRef","useState","percentage","setPercentage","useEffect","progress","prevPercentage","current","setTimeout","clearTimeout","root","clsx","variant","value"],"mappings":"uMAWMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCC,eAAgB,OAKF,SAASA,EAAeC,GAAQ,IACtCC,EAA8CD,EAA9CC,UAAWC,EAAmCF,EAAnCE,YAD0B,EACSF,EAAtBG,cADa,MACJ,EADI,EACDC,EAAUJ,EAAVI,MACtCC,EAAUT,IAEVU,EAAQC,iBAAO,MAJwB,EAKTC,mBAASL,GALA,mBAKtCM,EALsC,KAK1BC,EAL0B,KAuB7C,OAhBAC,qBAAU,WAOT,OANiB,SAAXC,IACLF,GAAc,SAAAG,GAAc,QAAOA,KACnCP,EAAMQ,QAAUC,YAAW,kBAAMH,MAAYR,EAAQ,KAGtDQ,GACO,kBAAMN,EAAMQ,SAAWE,aAAaV,EAAMQ,YAE/C,CAACV,IAEAK,EAAa,MAChBH,EAAMQ,SAAWE,aAAaV,EAAMQ,SACpCZ,GAAea,YAAW,kBAAMb,MAAe,MAI/C,kBAAC,IAAD,CACCG,QAAS,CAAEY,KAAMC,YAAKb,EAAQN,eAAgBE,IAC9CkB,QAAQ,cACRC,MAAOX,EAAa,IAAM,IAAMA","file":"static/js/35.711dd357.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport clsx from 'clsx'\r\n\r\n\r\nimport MuiLinearProgress from '@material-ui/core/LinearProgress'\r\n\r\n\r\n/*\r\n * STYLES\r\n */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n\tLinearProgress: {\r\n\t},\r\n}));\r\n\r\n\r\nexport default function LinearProgress(props) {\r\n\tconst { className, onCompleted, offset = 0, total } = props;\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst timer = useRef(null);\r\n\tconst [percentage, setPercentage] = useState(offset);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst progress = () => {\r\n\t\t\tsetPercentage(prevPercentage => (++prevPercentage));\r\n\t\t\ttimer.current = setTimeout(() => progress(), total / 100);\r\n\t\t}\r\n\t\t\r\n\t\tprogress();\r\n\t\treturn () => timer.current && clearTimeout(timer.current);\r\n\t\t\r\n\t}, [total]);\r\n\t\r\n\tif (percentage > 100) {\r\n\t\ttimer.current && clearTimeout(timer.current);\r\n\t\tonCompleted && setTimeout(() => onCompleted(), 500);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<MuiLinearProgress\r\n\t\t\tclasses={{ root: clsx(classes.LinearProgress, className) }}\r\n\t\t\tvariant=\"determinate\"\r\n\t\t\tvalue={percentage > 100 ? 100 : percentage}\r\n\t\t\t/>\r\n\t);\r\n}"],"sourceRoot":""}